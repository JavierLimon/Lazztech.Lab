## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
##
grafana:
  # Use an existing secret for the admin user.
  admin:
    existingSecret: "admin"
    userKey: username
    passwordKey: password
  persistence:
    type: pvc
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "traefik"
      traefik.ingress.kubernetes.io/redirect-entry-point: https
    hosts:
      - grafana.internal.lazz.tech
    tls:
      - secretName: internal-acme-crt-secret
        hosts:
          - '*.internal.lazz.tech'
  grafana.ini:
    server:
      root_url: https://grafana.internal.lazz.tech
    # auth.generic_oauth:
    #   enabled: true
    #   name: "Login Keycloak"
    #   client_id: "grafana.internal.lazz.tech"
    #   client_secret: "<keep-it-secret-keep-it-safe>"
    #   auth_url: "https://keycloak.lazz.tech/auth/realms/development/protocol/openid-connect/auth"
    #   token_url: "https://keycloak.lazz.tech/auth/realms/development/protocol/openid-connect/token"
    #   api_url: "https://key.lazz.tech/auth/realms/development/protocol/openid-connect/userinfo"
    #   allow_sign_up: true
    #   role_attribute_path: "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'"
    #   email_attribute_name: email
    #   scopes: "openid profile email"
prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "traefik"
      traefik.ingress.kubernetes.io/redirect-entry-point: https
    hosts:
      - prometheus.internal.lazz.tech
    tls:
      - secretName: internal-acme-crt-secret
        hosts:
          - '*.internal.lazz.tech'
  prometheusSpec:
    additionalScrapeConfigs:
      - job_name: "External servers"
        static_configs:
          - targets: ["lazztech-hub-service-z84zo.ondigitalocean.app"]
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 50Gi