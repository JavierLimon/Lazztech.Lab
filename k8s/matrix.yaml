---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matrix-deployment
  labels:
    app: matrix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matrix
  template:
    metadata:
      labels:
        app: matrix
    spec:
      containers:
        - name: matrix
          image: matrixdotorg/synapse:v1.32.2
          # args: ["generate"]
          # env:
          # - name: SYNAPSE_SERVER_NAME
          #   value: "matrix.internal.lazz.tech"
          # - name: SYNAPSE_REPORT_STATS
          #   value: "no"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
          - mountPath: /data
            name: matrix-data
            subPath: data
          imagePullPolicy: IfNotPresent
        - name: matrix-element-web
          image: vectorim/element-web
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
          - mountPath: /data
            name: matrix-data
          imagePullPolicy: IfNotPresent
      volumes:
      - name: matrix-data
        persistentVolumeClaim:
          claimName: matrix-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: matrix-pvc
  namespace: default
  labels:
    app: matrix
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: matrix-service
  labels:
    app: matrix
spec:
  ports:
  - port: 80
    targetPort: 8008
    name: http
  selector:
    app: matrix
---
apiVersion: v1
kind: Service
metadata:
  name: matrix-element-web-service
  labels:
    app: matrix
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: matrix
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: matrix-synapse-ingress
  labels:
    app: matrix
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: synapse.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: matrix-service
          servicePort: http
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: matrix-element-web-ingress
  labels:
    app: matrix
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: matrix.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: matrix-element-web-service
          servicePort: http