---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:RELEASE.2021-01-05T05-22-38Z
          args:
            - "server"
            - "/data"
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                name: minio
                key: minio-user
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: minio
                key: minio-password
          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
          - containerPort: 9000
          volumeMounts:
          - mountPath: /data
            name: minio-data
            subPath: data
          imagePullPolicy: IfNotPresent
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  ports:
  - port: 80
    targetPort: 9000
    name: tcp
  selector:
    app: minio
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: minio-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: objects.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: minio-service
          servicePort: 80