---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: docker-registry
          image: registry:2
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
          - containerPort: 5000
          volumeMounts:
          - mountPath: /var/lib/registry
            name: docker-registry-data
            subPath: var/lib/registry
          imagePullPolicy: IfNotPresent
      volumes:
      - name: docker-registry-data
        persistentVolumeClaim:
          claimName: docker-registry-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
spec:
  ports:
  - port: 5000
    targetPort: 5000
    name: tcp
  selector:
    app: docker-registry
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: docker-registry-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: registry.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: docker-registry-service
          servicePort: 5000