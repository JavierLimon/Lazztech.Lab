---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-frontend
  template:
    metadata:
      labels:
        app: docker-registry-frontend
    spec:
      containers:
        - name: docker-registry-frontend
          image: konradkleine/docker-registry-frontend:v2
          env:
            - name: ENV_DOCKER_REGISTRY_HOST
              value: "registry.internal.lazz.tech"
            - name: ENV_DOCKER_REGISTRY_PORT
              value: "5000"
            - name: ENV_DOCKER_REGISTRY_USE_SSL
              value: "1"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
          - containerPort: 80
          imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-frontend-service
spec:
  ports:
  - port: 80
    targetPort: 80
    name: tcp
  selector:
    app: docker-registry-frontend
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: docker-registry-frontend-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  tls:
    - secretName: internal-acme-crt-secret
      hosts:
        - '*.internal.lazz.tech'
  rules:
  - host: docker.internal.lazz.tech
    http:
      paths:
      - backend:
          serviceName: docker-registry-frontend-service
          servicePort: 80